/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package presentation;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.JOptionPane;

import bll.CovidTestBLL;
import bll.FighterBLL;
import objects.CovidTest;
import objects.Fighter;

/**
 *
 * @author mihai
 */
public class FighterForm extends javax.swing.JFrame {

	boolean weightFlag = false ;
	Administrator administrator = new Administrator();
	Forum forum = new Forum();
	
	public Administrator getAdministrator() {
		return administrator;
	}

	public void setAdministrator(Administrator administrator) {
		this.administrator = administrator;
	}
	
    /**
     * Creates new form FighterForm
     */
    public FighterForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        firstNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        weightLabel = new javax.swing.JLabel();
        InfoPanel = new javax.swing.JLabel();
        registerButton = new javax.swing.JButton();
        firstNameTextField = new javax.swing.JTextField();
        lastNameTextField = new javax.swing.JTextField();
        weightTextField = new javax.swing.JTextField();
        logo = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        firstNameLabel.setText("First Name");

        lastNameLabel.setText("Last Name");

        weightLabel.setText("Weight");

        InfoPanel.setText("Please enter your credentials below");

        registerButton.setText("Register");
        registerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerButtonMouseClicked(evt);
            }
        });
       

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/presentation/LogoUfc.png"))); // NOI18N

        closeButton.setText("X");
        closeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(logo)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addComponent(InfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(weightLabel)
                                .addComponent(lastNameLabel)
                                .addComponent(firstNameLabel))
                            .addGap(17, 17, 17)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(firstNameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                                    .addComponent(lastNameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(weightTextField))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(closeButton))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weightLabel)
                    .addComponent(weightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(registerButton)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    public int getIntRange(int start, int finish)
   	{
   	  Random rnd = new Random();
   	  int randomNumber = start + rnd.nextInt(finish + 1 - start);
   	  return randomNumber;

   	}
   	
   	public Date getDateRange(Date startDate, Date finishDate)
   	{
   		long startMillis = startDate.getTime();
   		long endMillis = finishDate.getTime();
   		long randomMilis = ThreadLocalRandom
   			      .current()
   			      .nextLong(startMillis, endMillis);
   		Date randomDate = new Date(randomMilis);
   		return randomDate;
   		
   	}
   	
   	public Date addDays(Date initialDate, int days)
   	{
   		Date newDate = new Date();
   		Calendar cal = Calendar.getInstance();
   		cal.setTime(initialDate);
   		cal.add(Calendar.DATE, days);
   		return newDate = cal.getTime();
   	}
   	
   	public String randomTestResult()
   	{
   		ArrayList<String> myList = new ArrayList<String>();
   		myList.addAll(Arrays.asList(new String[] {"Positive","Negative"}));
   		int index = getIntRange(0,1);
   		System.out.println(index);
   		return myList.get(index);
   	}
       
       public boolean testFirstName()
       {
       	String firstName = firstNameTextField.getText();
           String ePattern = "[a-zA-Z-]+";
           Pattern p = Pattern.compile(ePattern);
           Matcher m = p.matcher(firstName);
           
           if(!m.matches())
           	JOptionPane.showMessageDialog(null, "Please enter a valid first name");
           
           return m.matches();
       }
       
       public boolean testLastName()
       {
       	String lastName = lastNameTextField.getText();
           String ePattern = "[a-zA-Z-]+";
           Pattern p = Pattern.compile(ePattern);
           Matcher m = p.matcher(lastName);
           
           if(!m.matches())
           	JOptionPane.showMessageDialog(null, "Please enter a valid last name");
           
       	return m.matches();
           
       }
       
       
       public boolean testWeight()
       {
       	 String weightString = weightTextField.getText();
       	try
        	{
        		 Float.parseFloat(weightString);
        		 weightFlag = true;
        	}
        	catch(Exception NumberFormatException)
        	{
        		JOptionPane.showMessageDialog(null, "The weight you have entered has to be a real number");
        	} 
       	
       	
       	return weightFlag;
       	
       }
       
     
       
       

       private void registerButtonMouseClicked(java.awt.event.MouseEvent evt)
       {    

       	Date startDate = this.administrator.getDateChooser().getDate();
       	if(startDate == null)
       	{
       		JOptionPane.showMessageDialog(null, "No new tournaments are announced");
       	}
       	else
       	{
       		String dateString = new SimpleDateFormat("yyyy-MM-dd").format(startDate);
           	
           	System.out.println(dateString);
           	//this.administrator
               boolean allGood = false, covidTestGood = false;
       		if(testFirstName() && testLastName() && testWeight())
               	 allGood = true;
       		
               
               if(allGood)
               {        	          	
               	FighterBLL fighterBLL = new FighterBLL();
               	Fighter newFighter = new Fighter(firstNameTextField.getText(),
               									 lastNameTextField.getText(),
               									 Float.parseFloat(weightTextField.getText()),
               									 "Yes",
               									 "No");
               	fighterBLL.insertFighter(newFighter);
               	
               	CovidTestBLL covidTest = new CovidTestBLL();
       			CovidTest newCovidTest = new CovidTest(firstNameTextField.getText(), 
       												   lastNameTextField.getText(), 
       												   "Negative",
       												   dateString, //getDateRange incepand cu 4 luni inaintea turneului
       												   null,
       												   null);
       			
       			List<CovidTest> testsList = covidTest.getDAO().report();
       			for(CovidTest ct : testsList)
       			{
       				if(ct.getFighterFirstName().equals(newCovidTest.getFighterFirstName()) &&
       				   ct.getFighterLastName().equals(newCovidTest.getFighterLastName()))
       				{
       					covidTestGood = false;
       					System.out.println("Covid test wasn't inserted");
       				}
       				else
       					covidTestGood = true;
       			}
       			if(covidTestGood == true)
       			covidTest.insertCovidTest(newCovidTest);
               }
       	}
       	
           	

       }
                                                      

       private void closeButtonMouseClicked(java.awt.event.MouseEvent evt) {                                         
           this.dispose();
       }                                     

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FighterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FighterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FighterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FighterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FighterForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel InfoPanel;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel logo;
    private javax.swing.JButton registerButton;
    private javax.swing.JLabel weightLabel;
    private javax.swing.JTextField weightTextField;
    // End of variables declaration                   
}
